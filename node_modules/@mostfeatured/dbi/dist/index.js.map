{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;AACA,+BAAkD;AAClD,6DAA8E;AAC9E,mDAAkD;AAAzC,0GAAA,WAAW,OAAA;AAEpB,wDAAwB;AACxB,+CAAgE;AAEnD,QAAA,aAAa,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAErE,SAAgB,SAAS,CAAsE,SAAqB,EAAE,GAAyB;IAC7I,OAAO,IAAI,SAAG,CAAyB,SAAS,EAAE,GAAG,CAAC,CAAC;AACzD,CAAC;AAFD,8BAEC;AAAA,CAAC;AAEW,QAAA,KAAK,GAAG;IACnB,aAAa,EAAb,wBAAa;IACb,aAAa,EAAb,wBAAa;IACb,eAAe,EAAE,iCAAgB;CAClC,CAAA;AAED;;GAEG;AACI,KAAK,UAAU,eAAe,CAAC,GAAG,IAAW;IAClD,OAAO,CAAC,GAAG,CAAC,2FAA2F,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;IACxH,OAAO,MAAM,iCAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;AACpD,CAAC;AAHD,0CAGC","sourcesContent":["import { NamespaceEnums } from \"../generated/namespaceData\";\r\nimport { DBI, DBIConfigConstructor } from \"./DBI\";\r\nimport { recursiveImport as _recursiveImport } from \"./utils/recursiveImport\";\r\nexport { MemoryStore } from \"./utils/MemoryStore\";\r\n\r\nimport path from \"path\";\r\nimport { parseCustomId, buildCustomId } from \"./utils/customId\";\r\n\r\nexport const generatedPath = path.resolve(__dirname, \"../generated\");\r\n\r\nexport function createDBI<TNamespace extends NamespaceEnums, TOtherType = Record<string, any>>(namespace: TNamespace, cfg: DBIConfigConstructor): DBI<TNamespace, TOtherType> {\r\n  return new DBI<TNamespace, TOtherType>(namespace, cfg);\r\n};\r\n\r\nexport const Utils = {\r\n  parseCustomId,\r\n  buildCustomId,\r\n  recursiveImport: _recursiveImport\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport async function recursiveImport(...args: any[]) {\r\n  console.log(\"[DEPRECTED] recursiveImport is a deprected api. Please use Utils.recursiveImport instead.\", Error().stack);\r\n  return await _recursiveImport.call(this, ...args);\r\n}"]}