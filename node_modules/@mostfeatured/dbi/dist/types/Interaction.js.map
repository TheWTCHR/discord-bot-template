{"version":3,"file":"Interaction.js","sourceRoot":"","sources":["../../src/types/Interaction.ts"],"names":[],"mappings":";;;AA4DA,MAAa,kBAAkB;IAC7B,YAAY,GAAoB,EAAE,GAAgD;QAChF,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,SAAS,CAAC;IACpE,CAAC;IAED,OAAO,CAAiD;IACxD,GAAG,CAAkB;IACrB,IAAI,CAAS;IACb,WAAW,CAAS;IACX,IAAI,CAAuB;IACpC,OAAO,CAAe;IACtB,KAAK,CAAuB;IAC5B,UAAU,CAAkB;IAC5B,SAAS,CAAC,GAAmC;IAE7C,CAAC;CACF;AAvBD,gDAuBC","sourcesContent":["import Discord from \"discord.js\";\r\nimport { NamespaceEnums, NamespaceData } from \"../../generated/namespaceData\";\r\nimport { DBI } from \"../DBI\";\r\nimport { DBIButton } from \"./Button\";\r\nimport { DBIChatInput } from \"./ChatInput/ChatInput\";\r\nimport { DBILocale } from \"./Locale\";\r\nimport { DBIMessageContextMenu } from \"./MessageContextMenu\";\r\nimport { DBIModal } from \"./Modal\";\r\nimport { DBISelectMenu } from \"./SelectMenu\";\r\nimport { DBIUserContextMenu } from \"./UserContextMenu\";\r\n\r\nexport type TDBIInteractions<TNamespace extends NamespaceEnums> = DBIChatInput<TNamespace> | DBIButton<TNamespace> | DBISelectMenu<TNamespace> | DBIMessageContextMenu<TNamespace> | DBIUserContextMenu<TNamespace> | DBIModal<TNamespace>;\r\n\r\nexport interface IDBIBaseExecuteCtx<TNamespace extends NamespaceEnums> {\r\n  interaction:\r\n    | Discord.ChatInputCommandInteraction\r\n    | Discord.UserContextMenuCommandInteraction\r\n    | Discord.MessageContextMenuCommandInteraction\r\n    | Discord.ModalSubmitInteraction\r\n    | Discord.AutocompleteInteraction\r\n    | Discord.SelectMenuInteraction\r\n    | Discord.ButtonInteraction;\r\n  locale: {\r\n    user: DBILocale<TNamespace>,\r\n    guild?: DBILocale<TNamespace>\r\n  }\r\n  dbi: DBI<TNamespace>;\r\n  dbiInteraction: TDBIInteractions<TNamespace>;\r\n  setRateLimit(type: TDBIRateLimitTypes, duration: number): Promise<any>;\r\n  other: Record<string, any>;\r\n  clientNamespace: NamespaceData[TNamespace][\"clientNamespaces\"];\r\n}\r\n\r\nexport type TDBIReferencedData = ({ [key: string]: any, $ref: string, $unRef(): boolean } | string | number);\r\n\r\nexport type TDBIInteractionTypes =\r\n  | \"ChatInput\"\r\n  | \"UserContextMenu\"\r\n  | \"MessageContextMenu\"\r\n  | \"Modal\"\r\n  | \"Autocomplete\"\r\n  | \"SelectMenu\"\r\n  | \"Button\";\r\n\r\nexport type TDBIRateLimitTypes =\r\n  | \"User\"\r\n  | \"Channel\"\r\n  | \"Guild\"\r\n  | \"Member\"\r\n  | \"Message\";\r\n\r\n\r\nexport type DBIRateLimit = {\r\n  type: TDBIRateLimitTypes;\r\n  /**\r\n   * Duration in milliseconds.\r\n   */\r\n  duration: number;\r\n}\r\n\r\nexport class DBIBaseInteraction<TNamespace extends NamespaceEnums> {\r\n  constructor(dbi: DBI<TNamespace>, cfg: Omit<DBIBaseInteraction<TNamespace>, \"dbi\">) {\r\n    this.dbi = dbi;\r\n    this.name = cfg.name;\r\n    this.description = cfg.description;\r\n    this.onExecute = cfg.onExecute;\r\n    this.type = cfg.type;\r\n    this.options = cfg.options;\r\n    this.other = cfg.other;\r\n    this.publish = cfg.publish ?? dbi.data.clients.first()?.namespace;\r\n  }\r\n    \r\n  publish?: NamespaceData[TNamespace][\"clientNamespaces\"];\r\n  dbi: DBI<TNamespace>;\r\n  name: string;\r\n  description: string;\r\n  readonly type: TDBIInteractionTypes;\r\n  options?: any | any[];\r\n  other?: Record<string, any>;\r\n  rateLimits?: DBIRateLimit[];\r\n  onExecute(ctx: IDBIBaseExecuteCtx<TNamespace>): Promise<void> | void {\r\n\r\n  }\r\n}"]}